{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#about","title":"About","text":"<p>The <code>rbxcloud</code> CLI and library is built for easy access into the Roblox Open Cloud APIs. The CLI can be used by developers and CD pipelines for external deployments, messaging, and datastore management. The Rust library can be used to build tools and applications on top of Roblox's Open Cloud APIs with ease.</p>"},{"location":"#documentation","title":"Documentation","text":"<p>For documentation on the CLI, start on the CLI Installation page.</p> <p>For documentation on the Rust library, start on the Rust Library Installation page.</p>"},{"location":"cli/cli-api-key/","title":"API Key","text":"<p><code>rbxcloud</code> requires a Roblox API key to function. These keys can be created and managed on the Credentials Roblox page. Remember to always keep these keys secret.</p> <p>Roblox API keys will auto-expire if not used for over 60 days. Use the Credentials page to regenerate the key if this occurs.</p>"},{"location":"cli/cli-api-key/#security","title":"Security","text":"<p>As a general rule of practice for any API key:</p> <ul> <li>Use the least number of permissions as needed</li> <li>Keep the key in a secret location (e.g. GitHub Secrets, AWS Secrets Manager, etc.)</li> <li>Never commit a key to a source code repository</li> <li>Use as strict of a CIDR as possible</li> <li>Use an expiration date to force periodic key rollovers (must be manually regenerated)</li> </ul>"},{"location":"cli/cli-api-key/#handling-compromised-keys","title":"Handling Compromised Keys","text":"<p>If a key is suspected to have been compromised, use the Credentials page to immediately invalidate the key. This can be done by regenerating or deleting the key. Keys can also be disabled, but re-enabling the key will not change the key, thus is not a safe option to protect from a compromised key. If in doubt, regenerate the key.</p>"},{"location":"cli/cli-api-key/#storing-keys","title":"Storing Keys","text":"<p>There are many tools that can be used to securely store a key. GitHub has a Secrets page for each repository, which can then be used by GitHub Actions securely. AWS and GCP have a Secrets Manager service. Azure has the Key Vault service.</p> <p>If a key must be located within a local repository's directory, be sure to add it to the <code>.gitignore</code> file. This is common in some <code>.env</code> file setups.</p>"},{"location":"cli/cli-api-key/#environment-variable","title":"Environment Variable","text":"<p>All CLI commands expect the <code>--api-key</code> parameter, but can also be set via the <code>RBXCLOUD_API_KEY</code> environment variable. With the environment variable set, the <code>--api-key</code> parameter can be left out.</p>"},{"location":"cli/cli-assets/","title":"Assets API","text":""},{"location":"cli/cli-assets/#get","title":"Get","text":"<p>Get information on a given asset. <pre><code>Usage: rbxcloud assets get [OPTIONS] --asset-id &lt;ASSET_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -i, --asset-id &lt;ASSET_ID&gt;    Asset ID\n  -m, --read-mask &lt;READ_MASK&gt;\n  -a, --api-key &lt;API_KEY&gt;      Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                   Print help\n</code></pre></p>"},{"location":"cli/cli-assets/#create","title":"Create","text":"<p>Create a new asset. <pre><code>Usage: rbxcloud assets create [OPTIONS] --display-name &lt;DISPLAY_NAME&gt; --description &lt;DESCRIPTION&gt; --creator-id &lt;CREATOR_ID&gt; --creator-type &lt;CREATOR_TYPE&gt; --filepath &lt;FILEPATH&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -t, --asset-type &lt;ASSET_TYPE&gt;\n          Asset type [possible values: audio-mp3, audio-ogg, audio-flac, audio-wav, decal-png, decal-jpeg, decal-bmp, decal-tga, model-fbx]\n  -n, --display-name &lt;DISPLAY_NAME&gt;\n          Display name\n  -d, --description &lt;DESCRIPTION&gt;\n          Description\n  -e, --expected-price &lt;EXPECTED_PRICE&gt;\n          Expected Robux price\n  -i, --creator-id &lt;CREATOR_ID&gt;\n          Creator ID\n  -c, --creator-type &lt;CREATOR_TYPE&gt;\n          Creator type [possible values: user, group]\n  -f, --filepath &lt;FILEPATH&gt;\n          File (full or relative path)\n  -a, --api-key &lt;API_KEY&gt;\n          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help\n          Print help\n</code></pre></p>"},{"location":"cli/cli-assets/#update","title":"Update","text":"<p>Update an asset. <pre><code>Usage: rbxcloud assets update [OPTIONS] --asset-id &lt;ASSET_ID&gt; --filepath &lt;FILEPATH&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -t, --asset-type &lt;ASSET_TYPE&gt;  Asset type [possible values: audio-mp3, audio-ogg, audio-flac, audio-wav, decal-png, decal-jpeg, decal-bmp, decal-tga, model-fbx]\n  -i, --asset-id &lt;ASSET_ID&gt;      Asset ID\n  -f, --filepath &lt;FILEPATH&gt;      File (full or relative path)\n  -a, --api-key &lt;API_KEY&gt;        Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                     Print help\n</code></pre></p>"},{"location":"cli/cli-assets/#archive","title":"Archive","text":"<p>Archive an asset. <pre><code>Usage: rbxcloud assets archive --asset-id &lt;ASSET_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -i, --asset-id &lt;ASSET_ID&gt;  Asset ID\n  -a, --api-key &lt;API_KEY&gt;    Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                 Print help\n</code></pre></p>"},{"location":"cli/cli-assets/#restore","title":"Restore","text":"<p>Restore an archived asset. <pre><code>Usage: rbxcloud assets restore --asset-id &lt;ASSET_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -i, --asset-id &lt;ASSET_ID&gt;  Asset ID\n  -a, --api-key &lt;API_KEY&gt;    Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                 Print help\n</code></pre></p>"},{"location":"cli/cli-assets/#get-operation","title":"Get Operation","text":"<p>Get information on an asset operation. <pre><code>Usage: rbxcloud assets get-operation --operation-id &lt;OPERATION_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -i, --operation-id &lt;OPERATION_ID&gt;  Operation ID\n  -a, --api-key &lt;API_KEY&gt;            Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                         Print help\n</code></pre></p>"},{"location":"cli/cli-datastore/","title":"DataStore API","text":""},{"location":"cli/cli-datastore/#list-stores","title":"List Stores","text":"<p>List all DataStores within a given experience. <pre><code>USAGE:\n    rbxcloud datastore list-stores [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;            Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -c, --cursor &lt;CURSOR&gt;              Cursor for the next set of data\n    -h, --help                         Print help information\n    -l, --limit &lt;LIMIT&gt;                Maximum number of items to return\n    -p, --prefix &lt;PREFIX&gt;              Return only DataStores with this prefix\n    -u, --universe-id &lt;UNIVERSE_ID&gt;    Universe ID of the experience\n</code></pre></p>"},{"location":"cli/cli-datastore/#list-keys","title":"List Keys","text":"<p>List all keys within a given DataStore. <pre><code>USAGE:\n    rbxcloud datastore list [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -c, --cursor &lt;CURSOR&gt;                    Cursor for the next set of data\n    -d, --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -h, --help                               Print help information\n    -l, --limit &lt;LIMIT&gt;                      Maximum number of items to return\n    -o, --all-scopes                         If true, return keys from all scopes\n    -p, --prefix &lt;PREFIX&gt;                    Return only DataStores with this prefix\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n</code></pre></p>"},{"location":"cli/cli-datastore/#list-key-versions","title":"List Key Versions","text":"<p>List all versions of the specified key. <pre><code>USAGE:\n    rbxcloud datastore list-versions [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --key &lt;KEY&gt; --sort-order &lt;SORT_ORDER&gt; --limit &lt;LIMIT&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -c, --cursor &lt;CURSOR&gt;                    Cursor for the next set of data\n    -d, --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -e, --end-time &lt;END_TIME&gt;                End time constraint (ISO UTC Datetime)\n    -h, --help                               Print help information\n    -k, --key &lt;KEY&gt;                          The key of the entry\n    -l, --limit &lt;LIMIT&gt;                      Maximum number of items to return\n    -o, --sort-order &lt;SORT_ORDER&gt;            Sort order [possible values: ascending, descending]\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -t, --start-time &lt;START_TIME&gt;            Start time constraint (ISO UTC Datetime)\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n</code></pre></p>"},{"location":"cli/cli-datastore/#get-key","title":"Get Key","text":"<p>Get the entry value of a specific key. <pre><code>USAGE:\n    rbxcloud datastore get [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --key &lt;KEY&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d, --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -h, --help                               Print help information\n    -k, --key &lt;KEY&gt;                          The key of the entry\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n</code></pre></p>"},{"location":"cli/cli-datastore/#set-key","title":"Set Key","text":"<p>Set (or create) the entry value of a specific key. <pre><code>USAGE:\n    rbxcloud datastore set [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --key &lt;KEY&gt; --data &lt;DATA&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d, --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -D, --data &lt;DATA&gt;                        JSON-stringified data (up to 4MB)\n    -e, --exclusive-create                   Only create the entry if it does not exist\n    -h, --help                               Print help information\n    -i, --match-version &lt;MATCH_VERSION&gt;      Only update if the current version matches this\n    -k, --key &lt;KEY&gt;                          The key of the entry\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -t, --attributes &lt;ATTRIBUTES&gt;            JSON-stringified attributes data\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n    -U, --user-ids &lt;USER_IDS&gt;                Comma-separated list of Roblox user IDs\n</code></pre></p>"},{"location":"cli/cli-datastore/#increment-key","title":"Increment Key","text":"<p>Increment (or create) the entry value of a specific key. <pre><code>USAGE:\n    rbxcloud datastore increment [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --key &lt;KEY&gt; --increment-by &lt;INCREMENT_BY&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d, --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -h, --help                               Print help information\n    -i, --increment-by &lt;INCREMENT_BY&gt;        The amount by which the entry should be incremented\n    -k, --key &lt;KEY&gt;                          The key of the entry\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -t, --attributes &lt;ATTRIBUTES&gt;            JSON-stringified attributes data\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n    -U, --user-ids &lt;USER_IDS&gt;                Comma-separated list of Roblox user IDs\n</code></pre></p>"},{"location":"cli/cli-datastore/#delete-key","title":"Delete Key","text":"<p>Delete the value of a specific key. Per Roblox's documentation, this creates a \"tombstone\" version for 30 days before being completely deleted. <pre><code>USAGE:\n    rbxcloud datastore delete [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --key &lt;KEY&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d, --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -h, --help                               Print help information\n    -k, --key &lt;KEY&gt;                          The key of the entry\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n</code></pre></p>"},{"location":"cli/cli-datastore/#get-key-version","title":"Get Key Version","text":"<p>Get a specific entry of a key given the version. <pre><code>USAGE:\n    rbxcloud datastore get-version [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --key &lt;KEY&gt; --version-id &lt;VERSION_ID&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d, --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -h, --help                               Print help information\n    -i, --version-id &lt;VERSION_ID&gt;            The version of the key\n    -k, --key &lt;KEY&gt;                          The key of the entry\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n</code></pre></p>"},{"location":"cli/cli-experience/","title":"Experience API","text":""},{"location":"cli/cli-experience/#publish-place","title":"Publish Place","text":"<p>Publish a place to a Roblox experience. This takes an <code>*.rbxl</code> file and publishes it to a specific Place ID. <pre><code>USAGE:\n    rbxcloud experience publish --filename &lt;FILENAME&gt; --place-id &lt;PLACE_ID&gt; --universe-id &lt;UNIVERSE_ID&gt; --version-type &lt;VERSION_TYPE&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;              Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -f, --filename &lt;FILENAME&gt;            Filename (full or relative) of the RBXL file\n    -h, --help                           Print help information\n    -p, --place-id &lt;PLACE_ID&gt;            Place ID of the experience\n    -u, --universe-id &lt;UNIVERSE_ID&gt;      Universe ID of the experience\n    -t, --version-type &lt;VERSION_TYPE&gt;    Version type [possible values: saved, published]\n</code></pre></p>"},{"location":"cli/cli-experience/#example","title":"Example","text":"<pre><code>$ rbxcloud experience publish -f myplace.rbxl -t published -p 12345 -u 98765 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-experience/#github-action","title":"GitHub Action","text":"<p>A common practice is to create a CD pipeline to deploy a place automatically. This can be done with GitHub actions. Below is an example GitHub Action workflow. The example assumes that Aftman is being used and that <code>rbxcloud</code> is listed within the <code>aftman.toml</code> file.</p> <pre><code># Deploy any time code is pushed to the 'main' branch\nname: Deploy\non:\n  push:\n    branches:\n      - main\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Install Aftman\n        uses: ok-nick/setup-aftman@v0\n\n      - name: Publish\n        shell: bash\n        env:\n          UID: 123456789              # Universe ID\n          PID: 123456789              # Place ID\n          API_KEY: ${{ secrets.key }} # API Key (keep this in your GitHub Repository Secrets)\n          FILE: my_place.rbxl         # Roblox place file (e.g. might have a step before this to build the file with Rojo)\n\n        run: rbxcloud experience publish -a \"$API_KEY\" -u \"$UID\" -p \"$PID\" -t published -f \"$FILE\"\n</code></pre>"},{"location":"cli/cli-group/","title":"Group API","text":""},{"location":"cli/cli-group/#get-group-info","title":"Get Group Info","text":"<p>Get information about a group. <pre><code>Usage: rbxcloud group get [OPTIONS] --group-id &lt;GROUP_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -a, --api-key &lt;API_KEY&gt;    Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -g, --group-id &lt;GROUP_ID&gt;  Group ID\n  -p, --pretty               Pretty-print the JSON response\n  -h, --help                 Print help\n</code></pre></p>"},{"location":"cli/cli-group/#example","title":"Example","text":"<pre><code>$ rbxcloud group get -p -g 12345 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-group/#get-group-shout","title":"Get Group Shout","text":"<p>Get a group's current shout and its metadata. <pre><code>Usage: rbxcloud group shout [OPTIONS] --group-id &lt;GROUP_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -a, --api-key &lt;API_KEY&gt;    Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -g, --group-id &lt;GROUP_ID&gt;  Group ID\n  -p, --pretty               Pretty-print the JSON response\n  -o, --only-message         Only return the shout message string\n  -h, --help                 Print help\n</code></pre></p>"},{"location":"cli/cli-group/#example_1","title":"Example","text":"<p>Get a group's shout and its metadata: <pre><code>$ rbxcloud group shout -p -g 12345 -a MY_KEY\n</code></pre></p> <p>Get a group's shout message only: <pre><code>$ rbxcloud group shout -p -g 12345 -a MY_KEY --only-message\n</code></pre></p>"},{"location":"cli/cli-group/#list-group-roles","title":"List Group Roles","text":"<p>List the roles of a given group. <pre><code>Usage: rbxcloud group roles [OPTIONS] --group-id &lt;GROUP_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -g, --group-id &lt;GROUP_ID&gt;                Group ID\n  -p, --pretty                             Pretty-print the JSON response\n  -m, --max-page-size &lt;MAX_PAGE_SIZE&gt;      Max items returned per page\n  -n, --next-page-token &lt;NEXT_PAGE_TOKEN&gt;  Next page token\n  -h, --help                               Print help\n</code></pre></p>"},{"location":"cli/cli-group/#example_2","title":"Example","text":"<pre><code>$ rbxcloud group roles -p -g 12345 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-group/#list-group-memberships","title":"List Group Memberships","text":"<p>List members of the group. For more info on the <code>--filter</code> option, see Roblox's documentation. <pre><code>Usage: rbxcloud group memberships [OPTIONS] --group-id &lt;GROUP_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -g, --group-id &lt;GROUP_ID&gt;                Group ID\n  -p, --pretty                             Pretty-print the JSON response\n  -m, --max-page-size &lt;MAX_PAGE_SIZE&gt;      Max items returned per page\n  -f, --filter &lt;FILTER&gt;                    Filter\n  -n, --next-page-token &lt;NEXT_PAGE_TOKEN&gt;  Next page token\n  -h, --help                               Print help\n</code></pre></p>"},{"location":"cli/cli-group/#example_3","title":"Example","text":"<pre><code>$ rbxcloud group memberships -p -g 12345 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-install/","title":"Install","text":""},{"location":"cli/cli-install/#install-cli","title":"Install CLI","text":"<p>There are a few different ways to install the <code>rbxcloud</code> CLI.</p>"},{"location":"cli/cli-install/#aftman-preferred","title":"Aftman (Preferred)","text":"<p>Run the <code>aftman add</code> command within your project directory. This will add <code>rbxcloud</code> to the project's <code>aftman.toml</code> file (or create one if it doesn't yet exist). <pre><code>$ aftman add Sleitnick/rbxcloud@0.17.0\n</code></pre></p> <p>Next, run <code>aftman install</code> to install <code>rbxcloud</code>.</p>"},{"location":"cli/cli-install/#foreman","title":"Foreman","text":"<p>Add <code>rbxcloud</code> under the <code>[tools]</code> section of your <code>foreman.toml</code> file. <pre><code># foreman.toml\n[tools]\nrbxcloud = { github = \"Sleitnick/rbxcloud\", version = \"0.17.0\" }\n</code></pre></p> <p>Next, run <code>foreman install</code> to install <code>rbxcloud</code>.</p> Legacy <p>Aftman is preferred over Foreman. For more information, see the Aftman GitHub repository.</p>"},{"location":"cli/cli-install/#releases","title":"Releases","text":"<p>A few prebuilt binaries are compiled and attached to each release.</p> <ol> <li>Go to the <code>releases</code> page</li> <li>Navigate to the desired version (e.g. the latest version)</li> <li>Download and unzip the desired executable</li> <li>Relocate the executable to a more permanent place</li> <li>Change your OS path variable to point to the executable</li> </ol>"},{"location":"cli/cli-install/#verify","title":"Verify","text":"<p>Run the tool with the <code>--version</code> flag to verify the installation succeeded. <pre><code>$ rbxcloud --version\n</code></pre></p>"},{"location":"cli/cli-inventory/","title":"Inventory API","text":""},{"location":"cli/cli-inventory/#list","title":"List","text":"<p>List inventory items for a given user.</p> <pre><code>Usage: rbxcloud inventory list [OPTIONS] --user-id &lt;USER_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --user-id &lt;USER_ID&gt;              Roblox user ID\n  -p, --pretty                         Pretty-print the JSON response\n  -m, --max-page-size &lt;MAX_PAGE_SIZE&gt;  Max page size\n  -n, --page-token &lt;PAGE_TOKEN&gt;        Next page token\n  -f, --filter &lt;FILTER&gt;                Filter string\n  -a, --api-key &lt;API_KEY&gt;              Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                           Print help\n</code></pre>"},{"location":"cli/cli-luau-execution/","title":"Luau Execution API","text":""},{"location":"cli/cli-luau-execution/#execute-task","title":"Execute Task","text":"<p>Executes Luau code on Roblox. <pre><code>Usage: rbxcloud luau execute [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --place-id &lt;PLACE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID of the experience\n  -i, --place-id &lt;PLACE_ID&gt;        Place ID of the experience\n  -r, --version-id &lt;VERSION_ID&gt;    Version ID of the experience\n  -s, --script &lt;SCRIPT&gt;            Script source code\n  -f, --filepath &lt;FILEPATH&gt;        Script source code file\n  -t, --timeout &lt;TIMEOUT&gt;          Execution timeout\n  -p, --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre></p>"},{"location":"cli/cli-luau-execution/#get-task-information","title":"Get Task Information","text":"<p>Gets information on a previously executed task.</p> <pre><code>Usage: rbxcloud luau get-task [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --place-id &lt;PLACE_ID&gt; --session-id &lt;SESSION_ID&gt; --task-id &lt;TASK_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID of the experience\n  -i, --place-id &lt;PLACE_ID&gt;        Place ID of the experience\n  -r, --version-id &lt;VERSION_ID&gt;    Version ID of the experience\n  -s, --session-id &lt;SESSION_ID&gt;    Luau execution session ID\n  -t, --task-id &lt;TASK_ID&gt;          Luau execution task ID\n  -p, --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre>"},{"location":"cli/cli-luau-execution/#get-task-logs","title":"Get Task Logs","text":"<p>Retrieves logs on a previously executed task. <pre><code>Usage: rbxcloud luau get-logs [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --place-id &lt;PLACE_ID&gt; --session-id &lt;SESSION_ID&gt; --task-id &lt;TASK_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;      Universe ID of the experience\n  -i, --place-id &lt;PLACE_ID&gt;            Place ID of the experience\n  -r, --version-id &lt;VERSION_ID&gt;        Version ID of the experience\n  -s, --session-id &lt;SESSION_ID&gt;        Luau execution session ID\n  -t, --task-id &lt;TASK_ID&gt;              Luau execution task ID\n  -m, --max-page-size &lt;MAX_PAGE_SIZE&gt;  Max page size\n  -n, --page-token &lt;PAGE_TOKEN&gt;        Next page token\n  -w, --view &lt;VIEW&gt;                    Log view type [possible values: flat, structured]\n  -p, --pretty                         Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;              Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                           Print help\n</code></pre></p>"},{"location":"cli/cli-messaging/","title":"Messaging API","text":""},{"location":"cli/cli-messaging/#publish-message","title":"Publish Message","text":"<p>Publish a message to a Roblox experience. This takes a message and a topic and publishes the message. Experiences can use the <code>MessagingService</code> to subscribe to a topic and listen for messages. <pre><code>USAGE:\n    rbxcloud messaging publish --topic &lt;TOPIC&gt; --message &lt;MESSAGE&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;            Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -h, --help                         Print help information\n    -m, --message &lt;MESSAGE&gt;            Message to send\n    -t, --topic &lt;TOPIC&gt;                Message topic\n</code></pre></p> <p>Example: <pre><code>$ rbxcloud messaging publish -t Hello -m \"Hello world!\" -p 12345 -u 98765 -a MY_KEY\n</code></pre> <pre><code>MessagingService:SubscribeAsync(\"Hello\", function(message)\n    print(message)\n    --&gt; {message: \"Hello world!\"}\nend)\n</code></pre></p>"},{"location":"cli/cli-notification/","title":"Notification API","text":""},{"location":"cli/cli-notification/#send-notification","title":"Send Notification","text":"<p>Send a notification to a user. <pre><code>Usage: rbxcloud notification send [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --user-id &lt;USER_ID&gt; --payload &lt;PAYLOAD&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -U, --user-id &lt;USER_ID&gt;          User ID\n  -P, --payload &lt;PAYLOAD&gt;          Payload\n  -p, --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre></p>"},{"location":"cli/cli-notification/#example","title":"Example","text":"<p>For an example payload, see the Roblox documentation. <pre><code>$ rbxcloud notification send -p -u 12345 -U 6789 -P PAYLOAD_JSON -a MY_KEY\n</code></pre></p>"},{"location":"cli/cli-ordered-datastore/","title":"OrderedDataStore API","text":""},{"location":"cli/cli-ordered-datastore/#list-entries","title":"List Entries","text":"<pre><code>USAGE:\n    rbxcloud ordered-datastore list [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d  --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -f, --filter &lt;FILTER&gt;                    A range of qualifying values of entries to return\n    -h, --help                               Print help information\n    -m, --max-page-size &lt;MAX_PAGE_SIZE&gt;      Maximum number of items to return per page\n    -o, --order-by &lt;ORDER_BY&gt;                The enumeration direction (Use 'desc' for descending)\n    -p, --page-token &lt;PAGE_TOKEN&gt;            Cursor for the next set of data\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n</code></pre>"},{"location":"cli/cli-ordered-datastore/#get-entry","title":"Get Entry","text":"<pre><code>USAGE:\n    rbxcloud ordered-datastore get [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --id &lt;ID&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d  --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -h, --help                               Print help information\n    -i, --id &lt;ID&gt;                            The ID of the entry\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n</code></pre>"},{"location":"cli/cli-ordered-datastore/#create-entry","title":"Create Entry","text":"<pre><code>USAGE:\n    rbxcloud ordered-datastore create [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --id &lt;ID&gt; --value &lt;VALUE&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d  --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -h, --help                               Print help information\n    -i, --id &lt;ID&gt;                            The ID of the entry\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n    -v, --value &lt;VALUE&gt;                      The value of the entry\n</code></pre>"},{"location":"cli/cli-ordered-datastore/#update-entry","title":"Update Entry","text":"<pre><code>USAGE:\n    rbxcloud ordered-datastore update [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --id &lt;ID&gt; --value &lt;VALUE&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d  --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -h, --help                               Print help information\n    -i, --id &lt;ID&gt;                            The ID of the entry\n    -m, --allow-missing &lt;ALLOW_MISSING&gt;      Create if missing [possible values: true, false]\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n    -v, --value &lt;VALUE&gt;                      The value of the entry\n</code></pre>"},{"location":"cli/cli-ordered-datastore/#increment-entry","title":"Increment Entry","text":"<pre><code>USAGE:\n    rbxcloud ordered-datastore increment [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --id &lt;ID&gt; --increment &lt;INCREMENT&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d  --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -h, --help                               Print help information\n    -i, --id &lt;ID&gt;                            The ID of the entry\n    -n, --increment &lt;INCREMENT&gt;              The incremented value of the entry\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n</code></pre>"},{"location":"cli/cli-ordered-datastore/#delete-entry","title":"Delete Entry","text":"<pre><code>USAGE:\n    rbxcloud ordered-datastore delete [OPTIONS] --datastore-name &lt;DATASTORE_NAME&gt; --id &lt;ID&gt; --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOPTIONS:\n    -a, --api-key &lt;API_KEY&gt;                  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n    -d  --datastore-name &lt;DATASTORE_NAME&gt;    DataStore name\n    -h, --help                               Print help information\n    -i, --id &lt;ID&gt;                            The ID of the entry\n    -s, --scope &lt;SCOPE&gt;                      DataStore scope\n    -u, --universe-id &lt;UNIVERSE_ID&gt;          Universe ID of the experience\n</code></pre>"},{"location":"cli/cli-place/","title":"Universe API","text":""},{"location":"cli/cli-place/#getting-place-info","title":"Getting Place Info","text":"<pre><code>Usage: rbxcloud place get [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --place-id &lt;PLACE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -p, --place-id &lt;PLACE_ID&gt;        Place ID\n      --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre>"},{"location":"cli/cli-place/#example","title":"Example","text":"<pre><code>$ rbxcloud place get -u 12345 -p 67890 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-place/#updating-name","title":"Updating Name","text":"<pre><code>Usage: rbxcloud place update-name [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --place-id &lt;PLACE_ID&gt; --name &lt;NAME&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -p, --place-id &lt;PLACE_ID&gt;        Place ID\n  -n, --name &lt;NAME&gt;                New Place name\n      --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre>"},{"location":"cli/cli-place/#example_1","title":"Example","text":"<pre><code>$ rbxcloud place update-name -n \"Place Name\" -u 12345 -p 67890 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-place/#updating-description","title":"Updating Description","text":"<pre><code>Usage: rbxcloud place update-description [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --place-id &lt;PLACE_ID&gt; --description &lt;DESCRIPTION&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -p, --place-id &lt;PLACE_ID&gt;        Place ID\n  -d, --description &lt;DESCRIPTION&gt;  New Place description\n      --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre>"},{"location":"cli/cli-place/#example_2","title":"Example","text":"<pre><code>$ rbxcloud universe update-description -n \"Place description here.\" -u 12345 -p 67890 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-place/#updating-server-size","title":"Updating Server Size","text":"<pre><code>Usage: rbxcloud place update-server-size [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --place-id &lt;PLACE_ID&gt; --server-size &lt;SERVER_SIZE&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -p, --place-id &lt;PLACE_ID&gt;        Place ID\n  -s, --server-size &lt;SERVER_SIZE&gt;  New Place server size\n      --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre>"},{"location":"cli/cli-place/#example_3","title":"Example","text":"<pre><code>$ rbxcloud place update-server-size -s 700 -u 12345 -p 67890 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-subscription/","title":"Subscription API","text":""},{"location":"cli/cli-subscription/#getting-subscription-info","title":"Getting Subscription Info","text":"<pre><code>Usage: rbxcloud subscription get [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --product &lt;PRODUCT&gt; --subscription &lt;SUBSCRIPTION&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;    Universe ID\n  -S, --product &lt;PRODUCT&gt;            Subscription product ID\n  -s, --subscription &lt;SUBSCRIPTION&gt;  Subscription ID\n  -v, --view &lt;VIEW&gt;                  View type [possible values: basic, full]\n  -p, --pretty                       Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;            Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                         Print help\n</code></pre>"},{"location":"cli/cli-subscription/#example","title":"Example","text":"<pre><code>$ rbxcloud subscription get -p -u 12345 -S 1234 -s 5678 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-universe/","title":"Universe API","text":""},{"location":"cli/cli-universe/#getting-universe-info","title":"Getting Universe Info","text":"<pre><code>Usage: rbxcloud universe get [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -p, --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre>"},{"location":"cli/cli-universe/#example","title":"Example","text":"<pre><code>$ rbxcloud universe get -p -u 12345 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-universe/#updating-name","title":"Updating Name","text":"<pre><code>Usage: rbxcloud universe update-name [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --name &lt;NAME&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -n, --name &lt;NAME&gt;                New Universe name\n  -p, --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre>"},{"location":"cli/cli-universe/#example_1","title":"Example","text":"<pre><code>$ rbxcloud universe update-name -n \"Experience Name\" -p -u 12345 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-universe/#updating-description","title":"Updating Description","text":"<pre><code>Usage: rbxcloud universe update-description [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --description &lt;DESCRIPTION&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -d, --description &lt;DESCRIPTION&gt;  New Universe description\n  -p, --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre>"},{"location":"cli/cli-universe/#example_2","title":"Example","text":"<pre><code>$ rbxcloud universe update-description -n \"Experience description here.\" -p -u 12345 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-universe/#restarting-servers","title":"Restarting Servers","text":"<pre><code>Usage: rbxcloud universe restart --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre>"},{"location":"cli/cli-universe/#example_3","title":"Example","text":"<pre><code>$ rbxcloud universe restart -u 12345 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-user-restriction/","title":"User Restriction API","text":""},{"location":"cli/cli-user-restriction/#get","title":"Get","text":"<p>Get user restriction information. <pre><code>Usage: rbxcloud user-restriction get [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --user-id &lt;USER_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -U, --user-id &lt;USER_ID&gt;          User ID\n  -P, --place-id &lt;PLACE_ID&gt;        Place ID\n  -p, --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre></p>"},{"location":"cli/cli-user-restriction/#update","title":"Update","text":"<p>Update user restriction information. <pre><code>Usage: rbxcloud user-restriction update [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --user-id &lt;USER_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;        Universe ID\n  -U, --user-id &lt;USER_ID&gt;                User ID\n  -P, --place-id &lt;PLACE_ID&gt;              Place ID\n  -A, --active &lt;ACTIVE&gt;                  Restriction active [possible values: true, false]\n  -d, --duration &lt;DURATION&gt;              Restriction duration (seconds)\n  -r, --private-reason &lt;PRIVATE_REASON&gt;  Private reason\n  -D, --display-reason &lt;DISPLAY_REASON&gt;  Display reason\n  -e, --exclude-alts &lt;EXCLUDE_ALTS&gt;      Exclude alternate accounts [possible values: true, false]\n  -p, --pretty                           Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;                Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                             Print help\n</code></pre></p>"},{"location":"cli/cli-user-restriction/#list","title":"List","text":"<p>List user restrictions. <pre><code>Usage: rbxcloud user-restriction list [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -P, --place-id &lt;PLACE_ID&gt;        Place ID\n  -s, --page-size &lt;PAGE_SIZE&gt;      Max page size\n  -t, --token &lt;TOKEN&gt;              Next page token\n  -f, --filter &lt;FILTER&gt;            Filter\n  -p, --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre></p>"},{"location":"cli/cli-user-restriction/#logs","title":"Logs","text":"<p>List user restriction logs. <pre><code>Usage: rbxcloud user-restriction logs [OPTIONS] --universe-id &lt;UNIVERSE_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --universe-id &lt;UNIVERSE_ID&gt;  Universe ID\n  -P, --place-id &lt;PLACE_ID&gt;        Place ID\n  -s, --page-size &lt;PAGE_SIZE&gt;      Max page size\n  -t, --token &lt;TOKEN&gt;              Next page token\n  -f, --filter &lt;FILTER&gt;            Filter\n  -p, --pretty                     Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;          Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help                       Print help\n</code></pre></p>"},{"location":"cli/cli-user/","title":"User CLI","text":""},{"location":"cli/cli-user/#getting-user-information","title":"Getting User Information","text":"<pre><code>Usage: rbxcloud user get [OPTIONS] --user-id &lt;USER_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --user-id &lt;USER_ID&gt;  User ID\n  -p, --pretty             Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help               Print help\n</code></pre>"},{"location":"cli/cli-user/#example","title":"Example","text":"<pre><code>$ rbxcloud user get -p -u 12345 -a MY_KEY\n</code></pre>"},{"location":"cli/cli-user/#generating-user-thumbnail","title":"Generating User Thumbnail","text":"<pre><code>Usage: rbxcloud user thumbnail [OPTIONS] --user-id &lt;USER_ID&gt; --api-key &lt;API_KEY&gt;\n\nOptions:\n  -u, --user-id &lt;USER_ID&gt;  User ID\n  -s, --size &lt;SIZE&gt;        Thumbnail size [possible values: size48x48, size50x50, size60x60, size75x75, size100x100, size110x110, size150x150, size180x180, size352x352, size420x420, size720x720]\n  -f, --format &lt;FORMAT&gt;    Thumbnail format [possible values: png, jpeg]\n  -S, --shape &lt;SHAPE&gt;      Thumbnail shape [possible values: round, square]\n  -p, --pretty             Pretty-print the JSON response\n  -a, --api-key &lt;API_KEY&gt;  Roblox Open Cloud API Key [env: RBXCLOUD_API_KEY=]\n  -h, --help               Print help\n</code></pre>"},{"location":"cli/cli-user/#example_1","title":"Example","text":"<pre><code>$ rbxcloud user thumbnail -p -u 12345 -s size100x100 -f png -S round -a MY_KEY\n</code></pre>"},{"location":"lib/lib-install/","title":"Rust Library Installation","text":""},{"location":"lib/lib-install/#add-dependency","title":"Add Dependency","text":"<p>To use <code>rbxcloud</code> in a Rust project, simply add <code>rbxcloud</code> to the <code>Cargo.toml</code> dependency list. <pre><code>[dependencies]\nrbxcloud = \"0.17.0\"\n</code></pre></p> <p>Alternatively, use <code>cargo add</code>. <pre><code>$ cargo add rbxcloud\n</code></pre></p>"},{"location":"lib/lib-install/#documentation","title":"Documentation","text":"<p>See the docs.rs page for documentation.</p>"}]}